<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>update_ar</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
<metrics-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>Y</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2015&#x2f;04&#x2f;22 15&#x3a;27&#x3a;46.529</created_date>
  <modified_user>-</modified_user>
  <modified_date>2015&#x2f;04&#x2f;22 15&#x3a;27&#x3a;46.529</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>If any errors occur, the complete&#xd;&#xa;transformation is rolled-back&#xd;&#xa;&#x28;transactional&#x29;</note>
      <xloc>27</xloc>
      <yloc>21</yloc>
      <width>223</width>
      <heigth>70</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>TODO&#x3a; &#xd;&#xa;- Update customer master &#xd;&#xa;with last transaction date</note>
      <xloc>354</xloc>
      <yloc>40</yloc>
      <width>188</width>
      <heigth>70</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>0</backgroundcolorred>
      <backgroundcolorgreen>255</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Get the max POSTDATE&#xd;&#xa;from master data. This&#xd;&#xa;will be our start date</note>
      <xloc>23</xloc>
      <yloc>239</yloc>
      <width>166</width>
      <heigth>70</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>CODA</name>
    <server>10.253.133.145</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>codaprod</database>
    <port>1521</port>
    <username>codauser</username>
    <password>Encrypted 2be98afc86aa7f2e4cb1aa174df9ea6cc</password>
    <servername/>
    <data_tablespace>codauser</data_tablespace>
    <index_tablespace>codauser</index_tablespace>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>GQL</name>
    <server/>
    <type>ORACLERDB</type>
    <access>ODBC</access>
    <database>LII_SALESDB</database>
    <port>1521</port>
    <username>DBTEST_XXX</username>
    <password>Encrypted 2be98afc86aa7f2e48d3080248fc78cf6</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>MASTER_DATA</name>
    <server/>
    <type>GENERIC</type>
    <access>Native</access>
    <database/>
    <port>1521</port>
    <username>sa</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce10bef2bcdb</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>CUSTOM_DRIVER_CLASS</code><attribute>org.h2.Driver</attribute></attribute>
      <attribute><code>CUSTOM_URL</code><attribute>jdbc&#x3a;h2&#x3a;&#x24;&#x7b;KETTLE_HOME&#x7d;&#x5c;db&#x5c;data&#x5c;master_data&#x3b;AUTO_SERVER&#x3d;true&#x3b;AUTO_SERVER_PORT&#x3d;2039&#x3b;DB_CLOSE_ON_EXIT&#x3d;FALSE</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>PROC_DATA</name>
    <server/>
    <type>GENERIC</type>
    <access>Native</access>
    <database/>
    <port>1521</port>
    <username>sa</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce10bef2bcdb</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>CUSTOM_DRIVER_CLASS</code><attribute>org.h2.Driver</attribute></attribute>
      <attribute><code>CUSTOM_URL</code><attribute>jdbc&#x3a;h2&#x3a;&#x24;&#x7b;KETTLE_HOME&#x7d;&#x5c;db&#x5c;data&#x5c;master_data&#x3b;AUTO_SERVER&#x3d;true&#x3b;AUTO_SERVER_PORT&#x3d;2039</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1521</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Query CODA</from><to>Get Timestamp</to><enabled>Y</enabled> </hop>
  <hop> <from>Get Parameters</from><to>Query CODA</to><enabled>Y</enabled> </hop>
  <hop> <from>Get Timestamp</from><to>Update Master</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>Get Parameters</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>MASTER_DATA</connection>
    <sql>SELECT MAX&#x28;POSTDATE&#x29; &#x2b; 1 AS P_START_DATE,&#xd;&#xa;-1 AS P_DAYS&#xd;&#xa;FROM MASTER_DATA.AR_ITEM_MASTER&#x3b;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>85</xloc>
      <yloc>167</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get Timestamp</name>
    <type>SystemInfo</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <name>LASTMOD</name>
        <type>system date &#x28;variable&#x29;</type>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>445</xloc>
      <yloc>167</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Query CODA</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import org.pentaho.di.core.database.*;
import org.pentaho.di.core.variables.*;
import org.pentaho.di.trans.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import oracle.jdbc.driver.*;

private final int MAX_PARAMS = 20;
private int[] paramIndexes = null;
private int[] outputIndexes = null;
private RowMetaInterface infoMeta = null;
private Database db = null;
private int maxRows = 0;
private int rowCount = 0;
private int fetchSize = 0;
private String procName = null;
private List procParams = null; 
private int cursorParamIndex = 0;
private RowSet infoStream = null;

// Overrides
public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
  Object[] infoRow = null;

  if (first) {
    if (procParams.size() > 0) {
      // Locate parameter value source
      infoStream = findInfoRowSet("PARAMETERS");
      
      if (infoStream == null) {
        // Can't continue without parameter values
        logError("Unable to find PARAMETERS InfoStream");
        setErrors(1);
        setOutputDone();
        return false;
      }
    }

    // Done with initialization
    first = false;
  }
  else {
    // We only run once for procedures with no parameters
    if (procParams.size() == 0) {
      setOutputDone();
      return false;    
    }
  }
   
  // If this procedure requires parameters, fetch values for them
  if (procParams.size() > 0) {
    // Get next set of parameter values (from InfoStep)
    logDebug("Fetching " + procParams.size() + " parameter values from PARAMETERS");
    infoRow = getRowFrom(infoStream);
    // Quit if none are available
    if (infoRow == null) {
      logDetailed("No more parameter values available from PARAMETERS");
      setOutputDone();
      return false;
    }
    
    if (infoMeta == null) {
      // Fetch parameter stream meta information
      infoMeta = infoStream.getRowMeta();
      if (infoMeta == null) {
        setErrors(1);
        logError("Unable to retrieve meta information from PARAMETERS");
        setOutputDone();
        return false;
      }
      
      // For each procedure parameter, identify the index in the info stream
      paramIndexes = new int[procParams.size()];
      logDebug("Mapping " + procParams.size() + " parameters");
      for (int p = 0; p < paramIndexes.length; p++) {
        // Use each parameter's name to look up its index in the info stream
        String paramName = (String) procParams.get(p);
        logDebug("    Mapping " + paramName);
        paramIndexes[p] = infoMeta.indexOfValue(paramName);
      }
    }
  }
  else {
    infoRow = new Object[0]; // Empty array for procedures with no parameters
  }

  CallableStatement stmt=null;
  ResultSet rs=null;
  rowCount = 0;

  try
  {
    // Create a callable statement
    stmt = createStatement();
  
    // Execute the statement and fetch the result set
    rs = getResultSet(stmt, infoRow);
    rs.setFetchSize(fetchSize);
    rs.setFetchDirection(ResultSet.FETCH_FORWARD);
    logDetailed("Query completed. Fetching results...");

    RowMetaInterface rowMeta = null;
    DatabaseMeta dbMeta = null;
    
    // Fetch the first row from the result set
    while (rs.next() && ((rowCount < maxRows) || maxRows == 0)) {
     
      // Fetch the database row meta information from the first row
      if (rowMeta == null) {
        logDebug("Retrieving row meta information");
        dbMeta = db.getDatabaseMeta();
        if (dbMeta == null)
          logError("Unable to fetch database meta");
        rowMeta = db.getMetaFromRow(null, rs.getMetaData()); // getMetaFromRow does not use the provided row (as of PDI 5.1)
        if (rowMeta == null)
          logError("Unable to fetch database row meta");

        // For each result column, identify the index in the output stream
        outputIndexes = new int[rowMeta.size()];
        logDebug("Mapping " + rowMeta.size() + " columns");
        String[] columns = rowMeta.getFieldNames();
        for (int c = 0; c < outputIndexes.length; c++) {
          // Use each column's name to look up its index in the output stream
          logDebug("    Mapping " + columns[c]);
          outputIndexes[c] = data.outputRowMeta.indexOfValue(columns[c]);
        }
      }
      
      // Allocate an output row array
      Object[] outputRow = RowDataUtil.allocateRowData(data.outputRowMeta.size());
      
      // For each result field, map and convert to an output field (or ignore it)
      for (int f = 0; f < rowMeta.size(); f++) {
        int outIndex = outputIndexes[f];
        if (outIndex >= 0) { // Only set mapped field values
          // Get field value
          ValueMetaInterface fromMeta = rowMeta.getValueMeta(f);
          ValueMetaInterface toMeta = data.outputRowMeta.getValueMeta(f);
          if (toMeta == null) {
            logError("Unable to fetch output value meta for column " + f);
          }
          Object val = dbMeta.getValueFromResultSet(rs, fromMeta, f);

          // Convert to output type and set output value
          if (val != null) {
            if (val instanceof String) { // Trim any string values before converting
              val = ((String)val).trim();
            }
            outputRow[outIndex] = toMeta.convertData(fromMeta, val);
          }
          else
            outputRow[outIndex] = null;
        }
      }

      // Write the row to the log
      logRowlevel("Read row: " + data.outputRowMeta.getString(outputRow));

      // Pass the row to the next step
      putRow(data.outputRowMeta, outputRow);
      rowCount++;
    }
  } catch(Exception e) {
    throw new KettleException("Unable to execute stored procedure", e);
  } finally {
    if (rs != null) db.closeQuery(rs);
    if (stmt != null) db.closePreparedStatement(stmt);
  }

  // Signal that we are ready for more
	return true;
}

public boolean init(StepMetaInterface stepMetaInterface, StepDataInterface stepDataInterface)
{
  if (parent.initImpl(stepMetaInterface, stepDataInterface)) 
  {
    // Retrieve the name of the procedure to execute
    procName = getParameter("procName");
    if (procName != null && procName.trim().length() > 0) {
      
      // Check for maxRows parameter - limits number of rows returned
      String maxRowsParam = getParameter("maxRows");
      if (maxRowsParam != null && maxRowsParam.trim().length() > 0) {
        maxRows = Integer.parseInt(maxRowsParam);
        logDetailed("Max rows = " + maxRows);
      }
      
      // Check for fetchSize parameter - sets number of rows to fetch on each round-trip
      String fetchSizeParam = getParameter("fetchSize");
      if (fetchSizeParam != null && fetchSizeParam.trim().length() > 0) {
        fetchSize = Integer.parseInt(fetchSizeParam);
        logDetailed("Fetch size = " + fetchSize);
      }

      // Connect to the source database
      String connectionName = getParameter("connectionName");
      try{
        db = new Database(this.parent, getTransMeta().findDatabase(connectionName));
        db.shareVariablesWith(this.parent);
        db.connect();
        logDetailed("Connected to database [" + connectionName + "]");

        // Fetch parameter information for procedure
        logDetailed("Fetching Parameter Information for " + procName);
        procParams = getProcParams(procName);
        if (procParams != null)

        return true;
      }
      catch(KettleDatabaseException e){
          logError("Error connecting to " + connectionName + " - " + e.getMessage());
      }
    }
  }

  // Something went wrong...
  setErrors(1);
  stopAll();
  return false;
}

public void dispose(StepMetaInterface smi, StepDataInterface sdi)
{
    if (db != null) 
      db.disconnect();
    parent.disposeImpl(smi, sdi);
}

// Private members

private CallableStatement createStatement() throws Exception {

  // Assemble the query string
  String query = "{call " + procName + "(";
  for (int p = 0; p < procParams.size(); p++)
    query += "?,";    
  query += "?)}"; // Output parameter
 
	logDetailed("Query: '" + query + "'");

	// Create a callable statement.
	CallableStatement stmt = db.getConnection().prepareCall(query);

	return stmt;
}

private ResultSet getResultSet(CallableStatement stmt, Object[] r) throws Exception {

  // Set the output type to an Oracle Cursor
  stmt.registerOutParameter(cursorParamIndex + 1, OracleTypes.CURSOR);

  String paramValues = "";
	// Set the parameters...
	for (int p = 0; p < procParams.size(); p++) {
    int index = paramIndexes[p];
		ValueMetaInterface valueMeta = infoMeta.getValueMeta(index);
    Object valueData = r[index];
    db.setValue(stmt, valueMeta, valueData, p + 1);
    paramValues += valueData + "|";
	}

  if (fetchSize > 0) {
    logDetailed("Set fetch size : " + fetchSize);
    stmt.setFetchSize(fetchSize);
  }
  
 	// Execute the stored procedure...
	logDetailed("Parameter Values: " + paramValues);
	logDetailed("Executing : " + procName);
	stmt.execute();

	// Get the results...
  ResultSet rs = (ResultSet)stmt.getObject(cursorParamIndex + 1);

	return rs;
}

private List getProcParams(String procName)
{
  String[] nameParts = procName.split("\\.");
  if (nameParts.length > 2) {
    logError("Invalid procedure name: " + procName);
    return null;
  }
  procName = nameParts[nameParts.length - 1];

  // Fetch parameter information from the database
  ResultSet paramSet = null;
  String sql = "SELECT ARGUMENT_NAME, POSITION, DATA_TYPE, IN_OUT FROM USER_ARGUMENTS WHERE OBJECT_NAME = '" + procName + "' ";
  if (nameParts.length == 2)
    sql += " AND PACKAGE_NAME = '" + nameParts[0] + "' ";
  sql += " ORDER BY POSITION ASC";
  logDebug("Executing: " + sql);
  try {
    paramSet = db.openQuery(sql); // Execute SQL
  } catch(KettleDatabaseException e){
    logError("Error retrieving procedure parameters for " + procName + " - " + e.getMessage());
  }  
  
  List params = new ArrayList(MAX_PARAMS);
  try {
    for (Object[] row = db.getRow(paramSet); row != null; row = db.getRow(paramSet)) {
      if (row[3].equals("OUT")) {
        if (row[2].equals("REF CURSOR")) {
        cursorParamIndex = params.size();
        logDebug("Found Output Parameter at: " + cursorParamIndex);
        return params; // We don't support any more input parameters after this...
        }
        else {
          logError("Invalid output parameter type for procedure " + procName + " at position: " + row[1]);
          break;
        }
      }
      else {
        logDebug("Parameter " + params.size() + ": " + row[0]);
        params.add(row[0]);
      }
    }
    if (params.size() == 0)
      logError("Invalid procedure: " + procName);
    else // If we got here, we didn't find an OUT parameter...
      logError("Failed to find suitable output parameter type for procedure " + procName);
  } catch(KettleDatabaseException e){
    logError("Error retrieving procedure parameters for " + procName + " - " + e.getMessage());  
  } finally {
    db.closeQuery(paramSet);
  }
  
  return null;  
}
]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>CMPCODE</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>CUSTID</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCTYPE</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCSUBTYPE</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCNUM</field_name>

        <field_type>Integer</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>SOURCESYS</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>INVOICEREF</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>GLACCT</field_name>

        <field_type>Integer</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCDATE</field_name>

        <field_type>Date</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>POSTDATE</field_name>

        <field_type>Date</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>CLEARDATE</field_name>

        <field_type>Date</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCDESC</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>XACTREF</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>CUSTREF</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>EXTREF5</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>DOCCURR</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>HOMECURR</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>ALTCURR</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>ORGVAL_DOC</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>ORGVAL_HOME</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>ORGVAL_ALT</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>ORGVAL_NORM</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>OPENVAL_DOC</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>OPENVAL_HOME</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>OPENVAL_ALT</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>OPENVAL_NORM</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>PAYVAL_DOC</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>PAYVAL_HOME</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>PAYVAL_ALT</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>PAYVAL_NORM</field_name>

        <field_type>Number</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps><info_step><step_tag>PARAMETERS</step_tag>
<step_name>Get Parameters</step_name>
<step_description/>
</info_step></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>procName</parameter_tag>
<parameter_value>AR_EXTRACTS.OPEN_ITEMS_DELTA</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>connectionName</parameter_tag>
<parameter_value>CODA</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>fetchSize</parameter_tag>
<parameter_value>10000</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>maxRows</parameter_tag>
<parameter_value>0</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>266</xloc>
      <yloc>167</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Update Master</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>MASTER_DATA</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>MASTER_DATA</schema>
      <table>AR_ITEM_MASTER</table>
      <key>
        <name>CMPCODE</name>
        <field>CMPCODE</field>
        <condition>&#x3d;</condition>
        <name2/>
      </key>
      <key>
        <name>DOCTYPE</name>
        <field>DOCTYPE</field>
        <condition>&#x3d;</condition>
        <name2/>
      </key>
      <key>
        <name>DOCNUM</name>
        <field>DOCNUM</field>
        <condition>&#x3d;</condition>
        <name2/>
      </key>
      <key>
        <name>CUSTID</name>
        <field>CUSTID</field>
        <condition>&#x3d;</condition>
        <name2/>
      </key>
      <value>
        <name>DOCSUBTYPE</name>
        <rename>DOCSUBTYPE</rename>
        <update>Y</update>
      </value>
      <value>
        <name>SOURCESYS</name>
        <rename>SOURCESYS</rename>
        <update>Y</update>
      </value>
      <value>
        <name>INVOICEREF</name>
        <rename>INVOICEREF</rename>
        <update>Y</update>
      </value>
      <value>
        <name>GLACCT</name>
        <rename>GLACCT</rename>
        <update>Y</update>
      </value>
      <value>
        <name>DOCDATE</name>
        <rename>DOCDATE</rename>
        <update>Y</update>
      </value>
      <value>
        <name>POSTDATE</name>
        <rename>POSTDATE</rename>
        <update>Y</update>
      </value>
      <value>
        <name>CLEARDATE</name>
        <rename>CLEARDATE</rename>
        <update>Y</update>
      </value>
      <value>
        <name>DOCDESC</name>
        <rename>DOCDESC</rename>
        <update>Y</update>
      </value>
      <value>
        <name>XACTREF</name>
        <rename>XACTREF</rename>
        <update>Y</update>
      </value>
      <value>
        <name>CUSTREF</name>
        <rename>CUSTREF</rename>
        <update>Y</update>
      </value>
      <value>
        <name>EXTREF5</name>
        <rename>EXTREF5</rename>
        <update>Y</update>
      </value>
      <value>
        <name>DOCCURR</name>
        <rename>DOCCURR</rename>
        <update>Y</update>
      </value>
      <value>
        <name>HOMECURR</name>
        <rename>HOMECURR</rename>
        <update>Y</update>
      </value>
      <value>
        <name>ALTCURR</name>
        <rename>ALTCURR</rename>
        <update>Y</update>
      </value>
      <value>
        <name>ORGVAL_DOC</name>
        <rename>ORGVAL_DOC</rename>
        <update>Y</update>
      </value>
      <value>
        <name>ORGVAL_HOME</name>
        <rename>ORGVAL_HOME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>ORGVAL_ALT</name>
        <rename>ORGVAL_ALT</rename>
        <update>Y</update>
      </value>
      <value>
        <name>ORGVAL_NORM</name>
        <rename>ORGVAL_NORM</rename>
        <update>Y</update>
      </value>
      <value>
        <name>OPENVAL_DOC</name>
        <rename>OPENVAL_DOC</rename>
        <update>Y</update>
      </value>
      <value>
        <name>OPENVAL_HOME</name>
        <rename>OPENVAL_HOME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>OPENVAL_ALT</name>
        <rename>OPENVAL_ALT</rename>
        <update>Y</update>
      </value>
      <value>
        <name>OPENVAL_NORM</name>
        <rename>OPENVAL_NORM</rename>
        <update>Y</update>
      </value>
      <value>
        <name>PAYVAL_DOC</name>
        <rename>PAYVAL_DOC</rename>
        <update>Y</update>
      </value>
      <value>
        <name>PAYVAL_HOME</name>
        <rename>PAYVAL_HOME</rename>
        <update>Y</update>
      </value>
      <value>
        <name>PAYVAL_ALT</name>
        <rename>PAYVAL_ALT</rename>
        <update>Y</update>
      </value>
      <value>
        <name>PAYVAL_NORM</name>
        <rename>PAYVAL_NORM</rename>
        <update>Y</update>
      </value>
      <value>
        <name>LASTMOD</name>
        <rename>LASTMOD</rename>
        <update>Y</update>
      </value>
    </lookup>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>613</xloc>
      <yloc>167</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>

</transformation>
